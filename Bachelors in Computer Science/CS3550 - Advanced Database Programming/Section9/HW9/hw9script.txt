USE AdventureWorks
GO

--Query 1
--Which state has the most online orders?
--List the state name and how many online orders for the state with the most 
--  online orders. 

SELECT TOP 1 sp.Name, COUNT(*)
	FROM Person.StateProvince sp
	JOIN Person.Address a ON a.StateProvinceID = sp.StateProvinceID
	JOIN Sales.SalesOrderHeader soh ON soh.BillToAddressID = a.AddressID
	WHERE OnlineOrderFlag = 1
	GROUP BY sp.Name
	ORDER BY COUNT(*) DESC


--Query 2
--Which vendors have a credit rating greater than 3?
--Display the vendor name, credit rating and address (street address, 
--  city, state) for vendors that have a credit rating higher than 3. 
--  Sort the list by vendor name.

SELECT v.Name, CreditRating, AddressLine1, City, StateProvinceCode
	FROM Purchasing.Vendor v
	JOIN Person.BusinessEntity be ON be.BusinessEntityID = v.BusinessEntityID
	JOIN Person.BusinessEntityAddress bea ON bea.BusinessEntityID = be.BusinessEntityID
	JOIN Person.Address a ON a.AddressID = bea.AddressID 
	JOIN Person.StateProvince sp ON sp.StateProvinceID = a.StateProvinceID 
	WHERE CreditRating > 3
	ORDER BY v.Name


--Query 3
--Who is the most senior employee in each department?
--List the employee who first started working in each department. Use the 
--  start date in the Department to determine who started in the department 
--  first. Only include employees that are still working for the company. 
--  Include first and last name of employee, name of department, and date 
--  started in department. 
--  If there is more than one employee that started in a department on the 
--  earliest startdate, list them both. Order the list in alphabetical order 
--  by department.

SELECT FirstName, LastName, d.Name, StartDate
	FROM (SELECT MIN(StartDate) AS Date, DepartmentID
			FROM HumanResources.EmployeeDepartmentHistory
			WHERE EndDate IS NULL
			GROUP BY DepartmentID) AS ct 	  
	JOIN HumanResources.EmployeeDepartmentHistory edh ON edh.StartDate = ct.Date
	AND edh.DepartmentID = ct.DepartmentID
	JOIN HumanResources.Department d ON d.DepartmentID = edh.DepartmentID
	JOIN HumanResources.Employee e ON e.BusinessEntityID = edh.BusinessEntityID
	JOIN Person.Person p ON p.BusinessEntityID = e.BusinessEntityID 
	ORDER BY d.Name


--Query 4
--Use PIVOT to complete this query.
--What are the average sales for in-store and online purchases for each 
--  day of the week?
--Display the name of the day, the average sales subtotal for online orders, 
--  and average sales subtotal for in-store orders for each day of the week 
--  (Sunday, Monday, Tuesday, Wednesday, Thursday, Friday, Saturday). The days 
--  of the week are to be the headers across the top and 0 and 1 for in-store 
--  and online for the rows.
--  You can use a CASE statement to replace the o and 1 for In Store and 
--  Online. This is not required. It is just if you are interested.


SELECT *
	FROM	(SELECT DATENAME(weekday, OrderDate) DayOfTheWeek, SubTotal, 
				CASE WHEN OnlineOrderFlag = 0 THEN 'In-Store' ELSE 'Online' END AS OnOrOffLine 
					FROM Sales.SalesOrderHeader) AS s 
	PIVOT ( AVG(SubTotal) FOR DayOfTheWeek IN ([Sunday], [Monday], [Tuesday], [Wednesday], [Thursday], [Friday], [Saturday]) ) AS ps



--Query 5
--Use PIVOT to complete this query.
--How many units are sold each month for each category?
--List each category name, year, and the number of units sold by month. The 
--  names of the months are to be headers across the top and category names 
--  and years down the rows. Order by category name first and then year.


SELECT *
	FROM	(SELECT CASE WHEN OnlineOrderFlag = 0 THEN 'In-Store' ELSE 'Online' END AS OnOrOffLine,
				DATENAME(month, OrderDate) [Month], DATEPART(year, OrderDate) [Year], OrderQty
				FROM Sales.SalesOrderDetail sod
				JOIN Sales.SalesOrderHeader soh ON soh.SalesOrderID = sod.SalesOrderID) AS ot
			PIVOT (COUNT(OrderQty) FOR [Month] IN ([January], [February], [March], [April], [May], [June], [July], [August])) AS qot 
			ORDER BY Year, OnOrOffLine



